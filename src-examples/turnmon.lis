Z80/8080-Macro-Assembler  Release 2.0	Mon May  6 15:18:59 2024

LOC   OBJECT CODE   LINE   STMT SOURCE CODE
                       1      1 ; **************************************************************
                       2      2 ;
                       3      3 ; MITS ALTAIR 8800 ROM MONITOR
                       4      4 ;
                       5      5 ; **************************************************************
                       6      6 ;
                       7      7 ; BASED ON THE ORIGINAL ALTAIR TURNKEY SYSTEM MONITOR
                       8      8 ;
                       9      9 ; MODIFIED BY:  SCOTT LABOMBARD
                      10     10 ;               8/9/02
                      11     11 ;
                      12     12 ; MODIFIED TO ASSEMBLE WITH INTEL 8080 CROSS ASSEMBLER
                      13     13 ;               UDO MUNK
                      14     14 ;               10/11/08
                      15     15 ;
                      16     16 ; MODIFIED FOR ARDUINO8080
                      17     17 ;               UDO MUNK
                      18     18 ;               04/18/2024
                      19     19 ;
                      20     20 ; **************************************************************
                      21     21 
0c00  =               22     22 STACK   EQU     0C00H           ;MUST BE VALID RAM, NOT ROM!
0000  =               23     23 CONSTAT EQU     0Q              ;IO STATUS PORT
0001  =               24     24 CONDATA EQU     1Q              ;IO DATA PORT
                      25     25 
                      26     26         ORG     0000H           ;STARTING AT MEMORY LOCATION 0 IN ROM
                      27     27 
0000  31 00 0c        28     28 ENTER:  LXI     SP,STACK        ;INITIALIZE STACK POINTER
0003  cd 8e 00        29     29         CALL    CRLF            ;PRINT CARRIAGE RET+LINE FEED
0006  cd 8e 00        30     30         CALL    CRLF            ;PRINT CARRIAGE RET+LINE FEED
0009  3e 2e           31     31         MVI     A,'.'           ;MONITOR PROMPT
000b  cd ea 00        32     32         CALL    OUTCHK          ;PRINT CHAR TO CONSOLE
000e  cd e0 00        33     33         CALL    INCH            ;GET CHAR FROM CONSOLE
0011  fe 4d           34     34         CPI     'M'
0013  ca 24 00        35     35         JZ      MEM             ;DO MEMORY EXAMINE/ALTER
0016  fe 44           36     36         CPI     'D'
0018  ca 4c 00        37     37         JZ      DMP             ;DO MEMORY DUMP
001b  fe 4a           38     38         CPI     'J'
001d  c2 00 00        39     39         JNZ     ENTER
                      40     40 
                      41     41 ; **************************************************************
                      42     42 ; GET JUMP ADDRESS, LOAD TO PC, AND GO
                      43     43 ; **************************************************************
0020  cd 98 00        44     44         CALL    OCTL6           ;GET 6 OCTAL DIGITS IN HL
0023  e9              45     45         PCHL
                      46     46 
                      47     47 ; **************************************************************
                      48     48 ; MEMORY FUNCTION - DISPLAY AND/OR ALTER MEMORY
                      49     49 ; **************************************************************
0024  cd 98 00        50     50 MEM:    CALL    OCTL6           ;GET 6 OCTAL DIGITS IN HL
0027  c3 2b 00        51     51         JMP     CONT1
002a  23              52     52 CONT:   INX     H               ;POINT TO NEXT ADDRESS
002b  cd 8e 00        53     53 CONT1:  CALL    CRLF            ;PRINT CARRIAGE RET+LINE FEED
002e  54              54     54         MOV     D,H             ;SAVE ADDR TO DE
002f  5d              55     55         MOV     E,L
0030  cd be 00        56     56         CALL    PRT6            ;CVT TO ASCII + PRINT
0033  1a              57     57         LDAX    D               ;LOAD DATA FROM CURRENT MEM LOC
0034  67              58     58         MOV     H,A
0035  cd c4 00        59     59         CALL    PRT3            ;CVT TO ASCII + PRINT
0038  cd 9d 00        60     60         CALL    OCTL3           ;GET 3 OCTAL DIGITS IN HL
003b  eb              61     61         XCHG                    ;EXCHANGE HL AND DE
003c  da 2a 00        62     62         JC      CONT
003f  77              63     63         MOV     M,A             ;STORE USER SPECIFIED BYTE
0040  be              64     64         CMP     M               ;VALIDATE DATA BYTE IN MEMORY
0041  ca 2a 00        65     65         JZ      CONT            ;IF BYTE OKAY, KEEP GOING
0044  3e 3f           66     66 ERR:    MVI     A,'?'           ;WE HAVE A PROBLEM
0046  cd ea 00        67     67         CALL    OUTCHK          ;PRINT ERROR CHAR TO CONSOLE
0049  c3 00 00        68     68         JMP     ENTER
                      69     69 
                      70     70 ; **************************************************************
                      71     71 ; DUMP FUNCTION - DISPLAY DATA BETWEEN TWO SPECIFIED MEM LOCS
                      72     72 ; **************************************************************
004c  cd 98 00        73     73 DMP:    CALL    OCTL6           ;GET 6 OCTAL DIGITS IN HL
004f  eb              74     74         XCHG                    ;SAVE START ADDR TO DE
0050  d4 db 00        75     75         CNC     SPACE
0053  cd 98 00        76     76         CALL    OCTL6           ;GET 6 OCTAL DIGITS IN HL
0056  e5              77     77         PUSH    H               ;SAVE END ADDR
0057  62              78     78 DCONT:  MOV     H,D             ;MOV ADDR IN DE TO HL FOR PRINT
0058  6b              79     79         MOV     L,E
0059  cd 8e 00        80     80         CALL    CRLF            ;PRINT CARRIAGE RET+LINE FEED
005c  cd be 00        81     81         CALL    PRT6            ;CVT TO ASCII + PRINT
005f  cd db 00        82     82         CALL    SPACE
0062  01 10 00        83     83         LXI     B,020Q          ;PRINT 16 MEM LOCATIONS PER LINE
0065  1a              84     84 DO20:   LDAX    D               ;LOAD DATA FROM CURRENT MEM LOC
0066  67              85     85         MOV     H,A
0067  c5              86     86         PUSH    B               ;SAVE PRINT LOCATION COUNTER
0068  3e 08           87     87         MVI     A,010Q          ;IS HALF THE LINE PRINTED?
006a  b9              88     88         CMP     C
006b  c2 76 00        89     89         JNZ     NXTMEM
006e  3e 2d           90     90         MVI     A,'-'           ;MAKES EACH LINE EASIER TO READ
0070  cd ea 00        91     91         CALL    OUTCHK
0073  cd db 00        92     92         CALL    SPACE
0076  cd c4 00        93     93 NXTMEM: CALL    PRT3            ;CVT TO ASCII + PRINT MEM DATA
0079  c1              94     94         POP     B               ;RESTORE PRINT LOCATION COUNTER
007a  e1              95     95         POP     H               ;RESTORE END ADDR
007b  7c              96     96         MOV     A,H             ;COMPARE CURRENT ADDR WITH END
007c  ba              97     97         CMP     D
007d  c2 85 00        98     98         JNZ     DAGN
0080  7d              99     99         MOV     A,L
0081  bb             100    100         CMP     E
0082  ca 00 00       101    101         JZ      ENTER           ;PROCESSED LAST ADDRESS SO DONE
0085  e5             102    102 DAGN:   PUSH    H               ;SAVE END ADDR TO USE AGAIN
0086  13             103    103         INX     D               ;NEXT MEMORY LOCATION TO PRINT
0087  0d             104    104         DCR     C               ;CURRENT PRINT LOCATION COUNTER
0088  c2 65 00       105    105         JNZ     DO20            ;16 LOCATIONS PRINTED YET?              
008b  c3 57 00       106    106         JMP     DCONT           ;NEXT LINE IF 16 LOCATIONS DONE
                     107    107 
                     108    108 ; **************************************************************
                     109    109 ; PRINT CARRIAGE RETURN AND LINE FEED
                     110    110 ; **************************************************************
008e  3e 0d          111    111 CRLF:   MVI     A,015Q
0090  cd ea 00       112    112         CALL    OUTCHK          ;PRINT CHAR TO CONSOLE
0093  3e 0a          113    113         MVI     A,012Q
0095  c3 ea 00       114    114         JMP     OUTCHK          ;PRINT CHAR TO CONSOLE
                     115    115 
                     116    116 ; **************************************************************
                     117    117 ; BUILD 3/6 OCTAL DIGITS IN HL
                     118    118 ; **************************************************************
0098  06 06          119    119 OCTL6:  MVI     B,6             ;SET DIGIT COUNTER
009a  c3 9f 00       120    120         JMP     OCTL
009d  06 03          121    121 OCTL3:  MVI     B,3             ;SET DIGIT COUNTER
009f  21 00 00       122    122 OCTL:   LXI     H,0             ;CLEAR ALL 16 BITS OF HL REG
00a2  cd e0 00       123    123 AGN:    CALL    INCH            ;GET CHAR FROM CONSOLE
00a5  4f             124    124         MOV     C,A
00a6  fe 20          125    125         CPI     ' '             ;CHECK FOR SPACE CHAR
00a8  37             126    126         STC
00a9  c8             127    127         RZ                      ;SPACE CHAR ENTERED SO QUIT
00aa  e6 b8          128    128         ANI     270Q            ;CHECK FOR VALID OCTAL DIGIT
00ac  ee 30          129    129         XRI     060Q
00ae  c2 44 00       130    130         JNZ     ERR             ;NOT OCTAL SO LEAVE
00b1  79             131    131         MOV     A,C             ;CONVERT ASCII TO BINARY
00b2  e6 07          132    132         ANI     007Q            ;STRIP ASCII
00b4  29             133    133         DAD     H               ;SHIFT HL LEFT 3 BITS
00b5  29             134    134         DAD     H
00b6  29             135    135         DAD     H
00b7  85             136    136         ADD     L
00b8  6f             137    137         MOV     L,A             ;PUT OCTAL IN H
00b9  05             138    138         DCR     B               ;MORE DIGITS?
00ba  c2 a2 00       139    139         JNZ     AGN
00bd  c9             140    140         RET
                     141    141 
                     142    142 ; **************************************************************
                     143    143 ; PRINT 3 OR 6 OCTAL DIGITS FROM H OR HL
                     144    144 ; **************************************************************
00be  06 06          145    145 PRT6:   MVI     B,6             ;SET DIGIT COUNTER
00c0  af             146    146         XRA     A
00c1  c3 ce 00       147    147         JMP     NEXT1
00c4  06 03          148    148 PRT3:   MVI     B,3             ;SET DIGIT COUNTER
00c6  af             149    149         XRA     A
00c7  c3 cb 00       150    150         JMP     NXT3
00ca  29             151    151 NEXT3:  DAD     H               ;SHIFT 1 BIT
00cb  17             152    152 NXT3:   RAL
00cc  29             153    153         DAD     H               ;SHIFT 1 BIT
00cd  17             154    154         RAL
00ce  29             155    155 NEXT1:  DAD     H               ;SHIFT 1 BIT
00cf  17             156    156         RAL
00d0  e6 07          157    157         ANI     7               ;STRIP OFF OCTAL
00d2  f6 30          158    158         ORI     060Q            ;CONVERT TO ASCII
00d4  cd ea 00       159    159         CALL    OUTCHK          ;PRINT CHAR TO CONSOLE
00d7  05             160    160         DCR     B
00d8  c2 ca 00       161    161         JNZ     NEXT3
00db  3e 20          162    162 SPACE:  MVI     A,' '           ;ASCII SPACE CHARACTER
00dd  c3 ea 00       163    163         JMP     OUTCHK          ;PRINT CHAR TO CONSOLE
                     164    164 
                     165    165 ; **************************************************************
                     166    166 ; INPUT AND ECHO CHARACTER
                     167    167 ; **************************************************************
00e0  db 00          168    168 INCH:   IN      CONSTAT
00e2  0f             169    169         RRC
00e3  da e0 00       170    170         JC      INCH            ;CHECK READ STATUS
00e6  db 01          171    171         IN      CONDATA         ;READ CHARACTER
00e8  e6 7f          172    172         ANI     177Q            ;STRIP PARITY BIT
00ea  f5             173    173 OUTCHK: PUSH    PSW             ;SAVE CHARACTER
00eb  81             174    174         ADD     C               ;ADD IN CHECKSUM
00ec  4f             175    175         MOV     C,A             ;RESTORE CHECKSUM
00ed  db 00          176    176 LOOP:   IN      CONSTAT
00ef  07             177    177         RLC
00f0  da ed 00       178    178         JC      LOOP            ;GET WRITE STATUS
00f3  f1             179    179         POP     PSW
00f4  d3 01          180    180         OUT     CONDATA         ;PRINT USER TYPED CHARACTER
00f6  c9             181    181         RET
                     182    182 
00f7                 183    183         END

Symbol table

AGN     00a2    CONDATA 0001    CONSTAT 0000    CONT    002a    CONT1   002b 
CRLF    008e    DAGN    0085    DCONT   0057    DMP     004c    DO20    0065 
ENTER   0000    ERR     0044    INCH    00e0    LOOP    00ed    MEM     0024 
NEXT1   00ce    NEXT3   00ca    NXT3    00cb    NXTMEM  0076    OCTL    009f 
OCTL3   009d    OCTL6   0098    OUTCHK  00ea    PRT3    00c4    PRT6    00be 
SPACE   00db    STACK   0c00    
